---
// Beyond the Code Section Component - Clean Professional Design

const interests = [
  {
    icon: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect width="20" height="15" x="2" y="7" rx="2" ry="2"/><polyline points="17,2 12,7 7,2"/></svg>`,
    title: "Animation & Visual Media",
    description: "Japanese animation, storytelling, and visual design",
    items: ["Attack on Titan", "Demon Slayer", "Studio Ghibli", "Visual Narratives"],
    category: "Entertainment",
    id: "interests1"
  },
  {
    icon: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="10"/><path d="M12 2a14.5 14.5 0 0 0 0 20 14.5 14.5 0 0 0 0-20"/><path d="M2 12h20"/></svg>`,
    title: "Travel & Cultures",
    description: "Exploring different places and perspectives",
    items: ["Spain (Home)", "London (Current)", "European Cities", "Cultural Exchange"],
    category: "Exploration",
    id: "interests2"
  },
  {
    icon: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H20v20H6.5a2.5 2.5 0 0 1 0-5H20"/></svg>`,
    title: "Books & Learning",
    description: "Technical knowledge and personal development",
    items: ["Clean Code", "System Design", "Philosophy", "Biographies"],
    category: "Knowledge",
    id: "interests3"
  },
  {
    icon: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12 2a3 3 0 0 0-3 3v7a3 3 0 0 0 6 0V5a3 3 0 0 0-3-3Z"/><path d="M19 10v2a7 7 0 0 1-14 0v-2"/><line x1="12" x2="12" y1="19" y2="22"/><line x1="8" x2="16" y1="22" y2="22"/></svg>`,
    title: "Podcasts & Audio",
    description: "Staying updated with the tech community",
    items: ["Syntax", "The Changelog", "Lex Fridman", "Developer Tea"],
    category: "Learning",
    id: "interests4"
  }
];

const languages = [
  {
    language: "Spanish",
    level: "Native",
    icon: `<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="10"/><path d="M2 12h20"/><path d="M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z"/></svg>`
  },
  {
    language: "English",
    level: "Fluent",
    icon: `<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="10"/><path d="M2 12h20"/><path d="M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z"/></svg>`
  },
  {
    language: "JavaScript",
    level: "Professional",
    icon: `<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polyline points="16 18 22 12 16 6"/><polyline points="8 6 2 12 8 18"/></svg>`
  }
];

const personalSkills = [
  {
    skill: "Problem Solving",
    description: "Breaking down complex challenges",
    icon: `<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M9.937 15.5A2 2 0 0 0 8.5 14.063l-6.135-1.582a.5.5 0 0 1 0-.962L8.5 9.936A2 2 0 0 0 9.937 8.5l1.582-6.135a.5.5 0 0 1 .963 0L14.063 8.5A2 2 0 0 0 15.5 9.937l6.135 1.581a.5.5 0 0 1 0 .964L15.5 14.063a2 2 0 0 0-1.437 1.437l-1.582 6.135a.5.5 0 0 1-.963 0z"/></svg>`
  },
  {
    skill: "Guitar Playing",
    description: "Self-taught acoustic guitar",
    icon: `<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="m11.9 12.1 4.514-4.514"/><path d="M20.1 2.3a1 1 0 0 0-1.4 0l-1.114 1.114A2 2 0 0 0 17.5 4.828v.171a2 2 0 0 0 .586 1.414L18.672 7A2 2 0 0 1 19.258 8.5v.171a2 2 0 0 0 .586 1.414l.114.114a1 1 0 0 0 1.4-1.4l-.114-.114a2 2 0 0 1-.586-1.414V7.5a2 2 0 0 0-.586-1.414L19.5 5.414A2 2 0 0 1 18.914 4V3.828a2 2 0 0 0-.586-1.414z"/><path d="m7.5 16.5-2.196 2.196a1 1 0 0 1-1.414-1.414L5.086 16.086A2 2 0 0 0 5.5 14.672V14.5a2 2 0 0 1 .586-1.414l.114-.114A2 2 0 0 0 6.672 11.5V11a2 2 0 0 1 .586-1.414L8.5 8.414A2 2 0 0 0 9.086 7V6.828a2 2 0 0 1 .586-1.414l2.828-2.828a1 1 0 0 1 1.4 1.4L11.086 6.8A2 2 0 0 0 10.5 8.214V9a2 2 0 0 1-.586 1.414L8.672 11.7A2 2 0 0 0 8.086 13.1v.4a2 2 0 0 1-.586 1.414z"/></svg>`
  },
  {
    skill: "Football",
    description: "Weekend player and fan",
    icon: `<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="10"/><path d="M12 2a14.5 14.5 0 0 0 0 20 14.5 14.5 0 0 0 0-20"/><path d="M2 12h20"/></svg>`
  },
  {
    skill: "Cooking",
    description: "Experimenting with Spanish cuisine",
    icon: `<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M3 2v7c0 1.1.9 2 2 2h4a2 2 0 0 0 2-2V2"/><path d="M7 2v20"/><path d="M21 15V2a5 5 0 0 0-5 5v6c0 1.1.9 2 2 2h3Zm0 0v7"/></svg>`
  }
];
---

<!-- Beyond the Code Section -->
<section class="py-20 px-4 sm:px-6 lg:px-8">
  <div class="max-w-6xl mx-auto">
    <div 
      id="beyond-header-text"
      class="flex flex-col items-start gap-4 mb-16 opacity-0 transform transition-all duration-1000 ease-out"
    >
      <p class="uppercase text-sm tracking-widest text-text-secondary">Personal</p>
      <h2 class="font-display text-3xl sm:text-4xl font-bold text-black">
        Beyond the <span class="text-yellow-400">Code</span>
      </h2>
      <p class="font-body text-sm md:text-lg md:w-2/3 tracking-tight leading-snug text-text-secondary">
        The human side of development. My interests, languages, and pursuits outside the terminal.
      </p>
    </div>
    
    <!-- Main Interests Grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-16">
      {interests.map((interest, index) => (
        <div 
          id={interest.id}
          class={`group opacity-0 bg-white/80 backdrop-blur-sm rounded-xl p-6 border border-gray-200 transition-all duration-500 hover:shadow-lg hover:scale-105 hover:bg-white/90 ${
            index % 2 === 0 ? 'hover:-rotate-1' : 'hover:rotate-1'
          } hover:z-10 relative`}
        >
          <!-- Icon and Category -->
          <div class="flex items-center justify-between mb-4">
            <div 
              class="w-12 h-12 text-gray-700 group-hover:text-black transition-all duration-500 group-hover:scale-110"
              set:html={interest.icon}
            />
            <span class="font-body text-xs bg-gray-100 px-2 py-1 rounded text-gray-600 group-hover:bg-gray-200 transition-colors duration-300">
              {interest.category}
            </span>
          </div>
          
          <!-- Title -->
          <h3 class="font-display text-xl font-bold text-black mb-3 group-hover:translate-x-1 transition-transform duration-300">
            {interest.title}
          </h3>
          
          <!-- Description -->
          <p class="font-body text-sm text-gray-600 mb-4 leading-relaxed group-hover:text-gray-800 transition-colors duration-300">
            {interest.description}
          </p>
          
          <!-- Items List -->
          <div class="space-y-2">
            {interest.items.map((item, itemIndex) => (
              <div class={`flex items-center space-x-2 text-sm text-gray-700 transition-all duration-300 ${
                itemIndex % 2 === 0 ? 'group-hover:translate-x-1' : 'group-hover:translate-x-2'
              }`}>
                <div class="w-1.5 h-1.5 bg-yellow-400 rounded-full group-hover:scale-125 transition-transform duration-300"></div>
                <span class="font-body">{item}</span>
              </div>
            ))}
          </div>
          
          <!-- Background Pattern -->
          <div class="absolute inset-0 bg-gradient-to-br from-transparent to-gray-50/50 rounded-xl opacity-0 group-hover:opacity-100 transition-opacity duration-500 pointer-events-none"></div>
        </div>
      ))}
    </div>
    
    <!-- Languages & Skills Row -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
      
      <!-- Languages -->
      <div 
        id="languages-section"
        class="opacity-0 bg-white/80 backdrop-blur-sm rounded-xl p-6 border border-gray-200 transition-all duration-500 hover:shadow-lg hover:bg-white/90"
      >
        <div class="flex items-center space-x-3 mb-6">
          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-gray-700">
            <path d="M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z"/>
            <path d="M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z"/>
          </svg>
          <h3 class="font-display text-xl font-bold text-black">Languages</h3>
        </div>
        
        <div class="space-y-4">
          {languages.map((lang, index) => (
            <div class="flex items-center justify-between p-3 rounded-lg bg-gray-50 hover:bg-gray-100 transition-colors duration-300">
              <div class="flex items-center space-x-3">
                <div class="text-gray-600" set:html={lang.icon} />
                <span class="font-body font-medium text-gray-800">{lang.language}</span>
              </div>
              <span class="font-body text-sm text-gray-600 bg-white px-2 py-1 rounded">
                {lang.level}
              </span>
            </div>
          ))}
        </div>
      </div>
      
      <!-- Personal Skills -->
      <div 
        id="skills-section"
        class="opacity-0 bg-white/80 backdrop-blur-sm rounded-xl p-6 border border-gray-200 transition-all duration-500 hover:shadow-lg hover:bg-white/90"
      >
        <div class="flex items-center space-x-3 mb-6">
          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-gray-700">
            <path d="M12 2v20"/><path d="M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"/>
          </svg>
          <h3 class="font-display text-xl font-bold text-black">Personal Skills</h3>
        </div>
        
        <div class="space-y-4">
          {personalSkills.map((skill, index) => (
            <div class="p-3 rounded-lg bg-gray-50 hover:bg-gray-100 transition-colors duration-300">
              <div class="flex items-center space-x-3 mb-2">
                <div class="text-gray-600" set:html={skill.icon} />
                <span class="font-body font-medium text-gray-800">{skill.skill}</span>
              </div>
              <p class="font-body text-sm text-gray-600 ml-8">{skill.description}</p>
            </div>
          ))}
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  import { addElementToObserver } from '../../../helpers/observerHelper';
  
  addElementToObserver('beyond-header-text', 'slide-in-left-animate');
  addElementToObserver('interests1', 'slide-down-blur-animate');
  addElementToObserver('interests2', 'slide-down-blur-animate-2');
  addElementToObserver('interests3', 'slide-down-blur-animate-3');
  addElementToObserver('interests4', 'slide-down-blur-animate-4');
  addElementToObserver('languages-section', 'blur-fade-in-5');
  addElementToObserver('skills-section', 'blur-fade-in-6');
</script>