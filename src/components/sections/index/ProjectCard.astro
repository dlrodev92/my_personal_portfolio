---
export interface Project {
  title: string;
  description: string;
  image: string;
  status: string;
  tech: string[];
  link: string;
}

export interface Props {
  project: Project;
  class?: string;
}

const { project, class: className } = Astro.props;
---

<article
  class="relative flex-1 min-w-[280px] max-w-full sm:max-w-[calc(50%-0.5rem)] md:max-w-[calc(33%-0.5rem)] h-[340px] rounded-xl overflow-hidden bg-black shadow-xl group mobile-project-hover"
>
  <div
    class="absolute inset-0 bg-cover bg-center brightness-75 grayscale group-hover:brightness-50 group-hover:grayscale-0 transition-all duration-300"
    style={`background-image: url('${project.image}')`}
  ></div>

 
  <div class="absolute inset-0 flex items-end justify-end p-4 opacity-100 group-hover:opacity-0 transition-opacity duration-300 z-10">
    <h3 class="text-white text-lg font-bold writing-vertical border-t-4 border-yellow-400 p-2 mr-6">
      {project.title}
    </h3>
  </div>

  
  <div class="absolute inset-0 flex flex-col justify-end p-4 opacity-0 group-hover:opacity-100 transition-opacity duration-300 z-20 bg-gradient-to-t from-black/90 via-black/60 to-transparent text-white space-y-2">
    <span class="bg-yellow-400 text-black text-xs font-bold px-3 py-1 rounded-full w-fit">{project.status}</span>
    <h3 class="text-xl font-bold">{project.title}</h3>
    <p class="text-sm text-gray-200">{project.description}</p>
    <div class="flex flex-wrap gap-2 text-xs">
      {project.tech.map((tech) => (
        <span class="px-2 py-1 border border-white/30 rounded bg-white/10 backdrop-blur">{tech}</span>
      ))}
    </div>
    <a href={project.link} class="text-yellow-400 text-sm font-bold hover:text-white transition">
      View Project â†’
    </a>
  </div>
</article>