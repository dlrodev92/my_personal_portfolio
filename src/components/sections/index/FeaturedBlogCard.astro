---
interface BlogCardData {
  title: string;
  excerpt: string;
  date: string;
  category: string;
  readTime: number;
  slug: string;
  image?: string;
  tags: string[];
}

interface Props {
  blog: BlogCardData;
  class?: string;
  id?: string;  // ← Agregamos el id como prop opcional
}

const { blog, class: className, id } = Astro.props;
---

<article 
  id={id}  // ← Agregamos el id al elemento
  class={`group bg-white rounded-xl overflow-hidden border border-gray-200 shadow-sm hover:shadow-md hover:border-gray-300 transition-all duration-300 ${className || ''}`}
>
  
  <!-- Hero Image -->
  <div class="relative h-48 sm:h-56 overflow-hidden">
    {blog.image ? (
      <img 
        src={blog.image} 
        alt={blog.title}
        class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-500"
        loading="lazy"
      />
    ) : (
      <div class="w-full h-full bg-gradient-to-br from-gray-50 to-gray-100 flex items-center justify-center">
        <div class="w-16 h-16 text-gray-400">
          <svg xmlns="http://www.w3.org/2000/svg" width="64" height="64" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1" stroke-linecap="round" stroke-linejoin="round">
            <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"/>
            <polyline points="14,2 14,8 20,8"/>
            <line x1="16" y1="13" x2="8" y2="13"/>
            <line x1="16" y1="17" x2="8" y2="17"/>
          </svg>
        </div>
      </div>
    )}
    
    <!-- Category badge -->
    <div class="absolute top-4 left-4">
      <span class="bg-white/95 backdrop-blur-sm text-gray-700 px-3 py-1.5 rounded-full font-body text-sm font-medium border border-gray-200 shadow-sm">
        {blog.category}
      </span>
    </div>
  </div>
  
  <!-- Content section -->
  <div class="p-6 sm:p-8 bg-white">
    
    <!-- Meta info -->
    <div class="flex items-center gap-4 text-sm text-gray-500 mb-4">
      <time>
        {new Date(blog.date).toLocaleDateString('en-US', { 
          year: 'numeric',
          month: 'long', 
          day: 'numeric' 
        })}
      </time>
      <span>•</span>
      <span>{blog.readTime} min read</span>
    </div>
    
    <!-- Title -->
    <h3 class="font-display text-xl sm:text-2xl lg:text-3xl font-bold text-gray-900 mb-4 leading-tight">
      {blog.title}
    </h3>
    
    <!-- Excerpt -->
    <p class="font-body text-base text-gray-600 leading-relaxed mb-6">
      {blog.excerpt}
    </p>
    
    <!-- Tags -->
    {blog.tags.length > 0 && (
      <div class="flex flex-wrap gap-2 mb-6">
        {blog.tags.map((tag) => (
          <span class="font-body text-xs bg-gray-100 px-3 py-1 rounded-full text-gray-600 border border-gray-200 hover:bg-gray-50 transition-colors duration-300">
            {tag}
          </span>
        ))}
      </div>
    )}
    
    <!-- CTA -->
    <div class="flex items-center justify-between">
      <a 
        href={`/blog/${blog.slug}`}
        class="inline-flex items-center font-display font-bold text-gray-900 hover:text-yellow-600 transition-colors duration-300 border-b-2 border-gray-900 hover:border-yellow-600"
      >
        Read article
        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="ml-2">
          <path d="M7 17L17 7"/>
          <path d="M7 7h10v10"/>
        </svg>
      </a>
      
      <a 
        href="/blog"
        class="font-body text-gray-500 hover:text-gray-900 transition-colors duration-300 text-sm"
      >
        All posts →
      </a>
    </div>
    
  </div>
  
</article>