---
const timelineEvents = [
  {
    date: "Early 2022",
    title: "The Beginning",
    description: "After years working in hospitality, from luxury events to high-end service I started teaching myself how to code. I’d tried online business models, but nothing stuck until I opened a text editor and built my first static website with HTML, CSS, and JavaScript. That was the spark.",
    tech: ["HTML", "CSS", "JavaScript"],
    type: "milestone",
    id: "timeline-1"
  },
  {
    date: "Early 2023",
    title: "School of Code Bootcamp",
    description: "Joined the School of Code full-time bootcamp. Focused on teamwork, pair programming, and building full-stack apps in a collaborative environment.",
    tech: ["Agile", "GitHub", "Team Projects", "Communication"],
    type: "milestone",
    id: "timeline-2"
  },
  {
    date: "Late 2023",
    title: "Full-Stack Evolution",
    description: "After struggling to land my first dev job, I doubled down on learning backend development and full-stack architecture. That led to a few freelance gigs where I built real applications for clients — and gained confidence through shipping, not theory.",
    tech: ["Node.js", "Express", "MongoDB", "PostgreSQL"],
    type: "growth",
    id: "timeline-3"
  },
  {
    date: "Early 2024",
    title: "Computing Degree",
    description: "Started a BSc in Computing at UWTSD to deepen my understanding of software fundamentals, algorithms, and architecture. Studying full-time while continuing studiying on my own and working part-time.",
    tech: ["CS Fundamentals", "Software Architecture", "Algorithms", "Team Projects"],
    type: "milestone",
    id: "timeline-4"
  },
  {
    date: "Mid 2023",
    title: "DevOps",
    description: "Ventured into cloud technologies and DevOps practices. Learned AWS services, containerization, and CI/CD pipelines.",
    tech: ["AWS", "Docker", "GitHub Actions", "Terraform"],
    type: "growth",
    id: "timeline-5"
  },
  {
    date: "Present",
    title: "Full-Stack in Motion",
    description: "Currently building and shipping web apps while finish my degree, working with AI-powered workflows, and refining my infrastructure skills. Focused on becoming a well-rounded engineer who can design, build, and deploy complete systems.",
    tech: ["Next.js", "AWS", "TypeScript", "DevOps", "AI"],
    type: "current",
    id: "timeline-6"
  }
];
---

<section class="py-20 min-h-screen px-4 sm:px-6 lg:px-8 bg-text-secondary/85">
  <div class="max-w-6xl mx-auto">
    <div class="bg-white rounded-3xl p-8 md:p-12 shadow-2xl">
      
      <!-- Header -->
      <div id="timeline-header" class="text-center mb-16 opacity-0 transform transition-all duration-500 ease-out">
        <p class="uppercase text-sm tracking-widest text-text-secondary mb-4">My Journey</p>
        <h2 class="font-display text-3xl sm:text-4xl font-bold text-black mb-6">
          From Zero to <span class="text-yellow-500">Full-Stack</span>
        </h2>
        <p class="font-body text-lg text-text-secondary max-w-2xl mx-auto">
          A timeline of my coding journey, from writing my first line of code to building production applications that solve real-world problems.
        </p>
      </div>

      <!-- Timeline -->
      <div class="relative">
        
        <!-- Line for Desktop -->
        <div class="hidden md:block absolute left-1/2 top-0 bottom-0 w-1 bg-gray-200 rounded-full">
          <div id="timeline-progress" class="absolute top-0 left-0 w-full bg-gradient-to-b from-yellow-500 to-black rounded-full transition-all duration-1500 ease-out" style="height:0%"></div>
        </div>

        <!-- Line for Mobile -->
        <div class="md:hidden absolute left-5 top-0 bottom-0 w-0.5 bg-gray-300"></div>

        <div class="space-y-12 md:space-y-16">
          {timelineEvents.map((event, index) => (
            <div id={event.id} class={`relative opacity-0 transition-all duration-400 ease-out group`}>

              <!-- Node -->
              <div class="absolute left-3 md:left-1/2 md:-translate-x-1/2 top-3 md:top-1/2 md:-translate-y-1/2 z-10">
                <div class={`w-5 h-5 rounded-full border-4 border-white shadow-xl ${
                  event.type === 'current' ? 'bg-yellow-500 animate-pulse shadow-yellow-500/50' :
                  event.type === 'milestone' ? 'bg-black shadow-black/30' : 'bg-gray-500 shadow-gray-500/30'
                }`}>
                  <div class={`absolute inset-0 rounded-full ${
                    event.type === 'current' ? 'bg-yellow-500' :
                    event.type === 'milestone' ? 'bg-black' : 'bg-gray-500'
                  } animate-ping opacity-20`}></div>
                </div>
              </div>

              <!-- Content -->
              <div class={`pl-12 md:pl-0 md:w-5/12 ${
                index % 2 === 0 ? 'md:mr-auto md:pr-8' : 'md:ml-auto md:pl-8'
              }`}>
                <div class={`relative bg-white border-2 border-gray-200 rounded-2xl p-6 transition-all duration-300 hover:scale-105 hover:shadow-xl hover:-translate-y-2 ${
                  index % 2 === 0 ? 'hover:rotate-1' : 'hover:-rotate-1'
                }`}>
                  
                  <!-- Date -->
                  <div class={`absolute -top-3 ${index % 2 === 0 ? 'right-3 md:-right-3' : 'left-3 md:-left-3'} transform rotate-12`}>
                    <div class={`font-body text-xs px-4 py-2 rounded-full font-bold text-white shadow-lg ${
                      event.type === 'current' ? 'bg-yellow-500' :
                      event.type === 'milestone' ? 'bg-black' : 'bg-gray-500'
                    }`}>
                      {event.date}
                    </div>
                  </div>

                  <div class="pt-4">
                    <h3 class="font-display text-lg md:text-2xl font-bold text-black mb-4">{event.title}</h3>
                    <p class="font-body text-sm md:text-base text-text-muted mb-6 leading-relaxed">{event.description}</p>

                    <div class="flex flex-wrap gap-2">
                      {event.tech.map((tech, techIndex) => (
                        <span class={`font-body text-xs md:text-sm bg-gray-100 px-3 py-1.5 rounded-full text-text-secondary border border-gray-200 transition-all duration-300 hover:bg-gray-200 hover:scale-110 ${
                          techIndex % 3 === 0 ? 'hover:translate-y-1' : 
                          techIndex % 3 === 1 ? 'hover:-translate-y-1' : 'hover:translate-x-1'
                        }`}>
                          {tech}
                        </span>
                      ))}
                    </div>
                  </div>

                </div>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  import { addElementToObserver } from '../../../helpers/observerHelper';
  addElementToObserver('timeline-header', 'blur-fade-in');
  addElementToObserver("timeline-1", "timeline-quick-1");
  addElementToObserver("timeline-2", "timeline-quick-2");
  addElementToObserver("timeline-3", "timeline-quick-3");
  addElementToObserver("timeline-4", "timeline-quick-4");
  addElementToObserver("timeline-5", "timeline-quick-5");
  addElementToObserver("timeline-6", "timeline-quick-6");
</script>
