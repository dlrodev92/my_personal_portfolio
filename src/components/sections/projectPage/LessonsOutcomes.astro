---
// Lessons Learned & Business Outcomes Component - Compact Version
export interface LessonsOutcomesProps {
  lessonsLearned: string[];
  businessOutcomes: string[];
  improvements: string[];
}

export interface Props {
  project: LessonsOutcomesProps;
}

const { project } = Astro.props;
---

<!-- Lessons Learned & Business Outcomes -->
<section class="py-16 px-4 sm:px-6 lg:px-8">
  <div class="max-w-5xl mx-auto">
    <div 
      id="lessons-header"
      class="flex flex-col items-start gap-4 mb-12 opacity-0 transform transition-all duration-1000 ease-out"
    >
      <p class="uppercase text-sm tracking-widest text-text-secondary">Insights</p>
      <h2 class="font-display text-3xl sm:text-4xl font-bold text-black">
        Lessons <span class="text-yellow-400">Learned</span>
      </h2>
    </div>

    <!-- Compact Grid Layout -->
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
      
      <!-- Lessons Learned -->
      <div 
        id="lessons-card"
        class="group opacity-0 bg-white/80 backdrop-blur-sm rounded-xl p-5 border border-gray-200 transition-all duration-500 hover:shadow-lg hover:scale-105 hover:bg-white/90 hover:-rotate-1 hover:z-10 relative"
      >
        <div class="flex items-center space-x-2 mb-4">
          <div class="w-8 h-8 bg-gray-100 rounded-lg flex items-center justify-center">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-gray-600">
              <path d="M9 11H5a2 2 0 0 0-2 2v3c0 1.1.9 2 2 2h4m6-6h4a2 2 0 0 1 2 2v3c0 1.1-.9 2-2 2h-4m-6 0a2 2 0 0 0-2-2v-3c0-1.1.9-2 2-2m6 0a2 2 0 0 1 2-2v-3c0-1.1-.9-2-2-2"/>
            </svg>
          </div>
          <h3 class="font-display font-bold text-black">Key Lessons</h3>
        </div>
        <div class="space-y-2">
          {project.lessonsLearned.slice(0, 3).map((lesson, index) => (
            <div class="flex items-start space-x-2">
              <div class="w-1.5 h-1.5 bg-gray-400 rounded-full mt-2 flex-shrink-0"></div>
              <p class="font-body text-text-secondary text-sm leading-relaxed">{lesson}</p>
            </div>
          ))}
        </div>
        <div class="absolute inset-0 bg-gradient-to-br from-transparent to-gray-50/30 rounded-xl opacity-0 group-hover:opacity-100 transition-opacity duration-500 pointer-events-none"></div>
      </div>

      <!-- Business Outcomes -->
      <div 
        id="outcomes-card"
        class="group opacity-0 bg-white/80 backdrop-blur-sm rounded-xl p-5 border border-gray-200 transition-all duration-500 hover:shadow-lg hover:scale-105 hover:bg-white/90 hover:rotate-1 hover:z-10 relative"
      >
        <div class="flex items-center space-x-2 mb-4">
          <div class="w-8 h-8 bg-gray-100 rounded-lg flex items-center justify-center">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-gray-600">
              <path d="M16 21v-2a4 4 0 0 0-4-4H6a4 4 0 0 0-4 4v2"/>
              <circle cx="9" cy="7" r="4"/>
              <path d="M22 21v-2a4 4 0 0 0-3-3.87"/>
              <path d="M16 3.13a4 4 0 0 1 0 7.75"/>
            </svg>
          </div>
          <h3 class="font-display font-bold text-black">Outcomes</h3>
        </div>
        <div class="space-y-2">
          {project.businessOutcomes.slice(0, 3).map((outcome, index) => (
            <div class="flex items-start space-x-2">
              <div class="w-1.5 h-1.5 bg-gray-400 rounded-full mt-2 flex-shrink-0"></div>
              <p class="font-body text-text-secondary text-sm leading-relaxed">{outcome}</p>
            </div>
          ))}
        </div>
        <div class="absolute inset-0 bg-gradient-to-br from-transparent to-gray-50/30 rounded-xl opacity-0 group-hover:opacity-100 transition-opacity duration-500 pointer-events-none"></div>
      </div>

      <!-- Future Improvements -->
      <div 
        id="improvements-card"
        class="group opacity-0 bg-white/80 backdrop-blur-sm rounded-xl p-5 border border-gray-200 transition-all duration-500 hover:shadow-lg hover:scale-105 hover:bg-white/90 hover:z-10 relative"
      >
        <div class="flex items-center space-x-2 mb-4">
          <div class="w-8 h-8 bg-gray-100 rounded-lg flex items-center justify-center">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-gray-600">
              <path d="M7 10v12"/>
              <path d="M15 5.88 14 10h5.83a2 2 0 0 1 1.92 2.56l-2.33 8A2 2 0 0 1 17.5 22H4a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h2.76a2 2 0 0 0 1.79-1.11L12 2h0a3.13 3.13 0 0 1 3 3.88Z"/>
            </svg>
          </div>
          <h3 class="font-display font-bold text-black">Improvements</h3>
        </div>
        <div class="space-y-2">
          {project.improvements.slice(0, 3).map((improvement, index) => (
            <div class="flex items-start space-x-2">
              <div class="w-1.5 h-1.5 bg-gray-400 rounded-full mt-2 flex-shrink-0"></div>
              <p class="font-body text-text-secondary text-sm leading-relaxed">{improvement}</p>
            </div>
          ))}
        </div>
        <div class="absolute inset-0 bg-gradient-to-br from-transparent to-gray-50/30 rounded-xl opacity-0 group-hover:opacity-100 transition-opacity duration-500 pointer-events-none"></div>
      </div>
      
    </div>
  </div>
</section>

<script>
  import { addElementToObserver } from '../../../helpers/observerHelper';
  
  addElementToObserver('lessons-header', 'slide-in-left-animate');
  addElementToObserver('lessons-card', 'blur-fade-in');
  addElementToObserver('outcomes-card', 'blur-fade-in-2');
  addElementToObserver('improvements-card', 'blur-fade-in-3');
</script>